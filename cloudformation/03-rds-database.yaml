AWSTemplateFormatVersion: '2010-09-09'
Description: 'RDS PostgreSQL Database with Multi-AZ deployment'

Parameters:
  EnvironmentName:
    Description: Environment name prefix
    Type: String
    Default: devops-portfolio

  DBInstanceIdentifier:
    Description: Database instance identifier
    Type: String
    Default: devops-portfolio-db

  DBName:
    Description: Database name
    Type: String
    Default: appdb
    MinLength: 1
    MaxLength: 64
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'

  DBUsername:
    Description: Database master username
    Type: String
    Default: dbadmin
    MinLength: 1
    MaxLength: 16
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'

  DBPassword:
    Description: Database master password
    Type: String
    NoEcho: true
    MinLength: 8
    MaxLength: 41
    Default: ChangeMe12345!
    AllowedPattern: '[a-zA-Z0-9!@#$%^&*()_+=-]*'

  DBInstanceClass:
    Description: Database instance class
    Type: String
    Default: db.t3.micro
    AllowedValues:
      - db.t3.micro
      - db.t3.small
      - db.t3.medium
      - db.r5.large
      - db.r5.xlarge

  DBAllocatedStorage:
    Description: Database allocated storage in GB
    Type: Number
    Default: 20
    MinValue: 20
    MaxValue: 1000

  MultiAZ:
    Description: Enable Multi-AZ deployment
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'

  BackupRetentionPeriod:
    Description: Number of days to retain automated backups
    Type: Number
    Default: 7
    MinValue: 1
    MaxValue: 35

Resources:
  # DB Subnet Group
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub ${EnvironmentName}-db-subnet-group
      DBSubnetGroupDescription: Subnet group for RDS database
      SubnetIds:
        - Fn::ImportValue: !Sub ${EnvironmentName}-PrivateSubnet1
        - Fn::ImportValue: !Sub ${EnvironmentName}-PrivateSubnet2
        - Fn::ImportValue: !Sub ${EnvironmentName}-PrivateSubnet3
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-db-subnet-group

  # DB Security Group
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${EnvironmentName}-db-sg
      GroupDescription: Security group for RDS database
      VpcId:
        Fn::ImportValue: !Sub ${EnvironmentName}-VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId:
            Fn::ImportValue: !Sub ${EnvironmentName}-EKSNodeSecurityGroup
          Description: Allow PostgreSQL access from EKS nodes
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-db-sg

  # DB Parameter Group
  DBParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      DBParameterGroupName: !Sub ${EnvironmentName}-postgres14-params
      Description: Custom parameter group for PostgreSQL 14
      Family: postgres14
      Parameters:
        shared_preload_libraries: pg_stat_statements
        log_statement: all
        log_min_duration_statement: 1000
        log_connections: 1
        log_disconnections: 1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-postgres14-params

  # DB Instance
  DBInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot
    Properties:
      DBInstanceIdentifier: !Ref DBInstanceIdentifier
      DBName: !Ref DBName
      Engine: postgres
      EngineVersion: '14.9'
      DBInstanceClass: !Ref DBInstanceClass
      AllocatedStorage: !Ref DBAllocatedStorage
      StorageType: gp3
      StorageEncrypted: true
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      DBSubnetGroupName: !Ref DBSubnetGroup
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
      DBParameterGroupName: !Ref DBParameterGroup
      MultiAZ: !Ref MultiAZ
      BackupRetentionPeriod: !Ref BackupRetentionPeriod
      PreferredBackupWindow: '03:00-04:00'
      PreferredMaintenanceWindow: 'sun:04:00-sun:05:00'
      EnableCloudwatchLogsExports:
        - postgresql
        - upgrade
      DeletionProtection: false
      PubliclyAccessible: false
      AutoMinorVersionUpgrade: true
      CopyTagsToSnapshot: true
      EnablePerformanceInsights: true
      PerformanceInsightsRetentionPeriod: 7
      Tags:
        - Key: Name
          Value: !Ref DBInstanceIdentifier
        - Key: Environment
          Value: !Ref EnvironmentName

  # Secrets Manager Secret for DB Credentials
  DBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${EnvironmentName}/rds/credentials
      Description: RDS database credentials
      SecretString: !Sub |
        {
          "username": "${DBUsername}",
          "password": "${DBPassword}",
          "engine": "postgres",
          "host": "${DBInstance.Endpoint.Address}",
          "port": ${DBInstance.Endpoint.Port},
          "dbname": "${DBName}",
          "dbInstanceIdentifier": "${DBInstanceIdentifier}"
        }
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-db-secret

  # Secret Rotation (optional - requires Lambda function)
  # SecretRotationSchedule:
  #   Type: AWS::SecretsManager::RotationSchedule
  #   Properties:
  #     SecretId: !Ref DBSecret
  #     RotationLambdaARN: !GetAtt SecretRotationLambda.Arn
  #     RotationRules:
  #       AutomaticallyAfterDays: 30

  # CloudWatch Alarms
  DBCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${EnvironmentName}-db-cpu-high
      AlarmDescription: Alert when DB CPU exceeds 80%
      MetricName: CPUUtilization
      Namespace: AWS/RDS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstance
      TreatMissingData: notBreaching

  DBMemoryAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${EnvironmentName}-db-memory-low
      AlarmDescription: Alert when DB freeable memory is low
      MetricName: FreeableMemory
      Namespace: AWS/RDS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 256000000  # 256 MB
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstance
      TreatMissingData: notBreaching

  DBStorageAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${EnvironmentName}-db-storage-low
      AlarmDescription: Alert when DB free storage space is low
      MetricName: FreeStorageSpace
      Namespace: AWS/RDS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 1
      Threshold: 2000000000  # 2 GB
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstance
      TreatMissingData: notBreaching

  DBConnectionsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${EnvironmentName}-db-connections-high
      AlarmDescription: Alert when DB connections are high
      MetricName: DatabaseConnections
      Namespace: AWS/RDS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstance
      TreatMissingData: notBreaching

Outputs:
  DBInstanceIdentifier:
    Description: RDS instance identifier
    Value: !Ref DBInstance
    Export:
      Name: !Sub ${EnvironmentName}-DBInstanceIdentifier

  DBEndpoint:
    Description: RDS instance endpoint address
    Value: !GetAtt DBInstance.Endpoint.Address
    Export:
      Name: !Sub ${EnvironmentName}-DBEndpoint

  DBPort:
    Description: RDS instance port
    Value: !GetAtt DBInstance.Endpoint.Port
    Export:
      Name: !Sub ${EnvironmentName}-DBPort

  DBName:
    Description: Database name
    Value: !Ref DBName
    Export:
      Name: !Sub ${EnvironmentName}-DBName

  DBSecretArn:
    Description: ARN of the Secrets Manager secret containing DB credentials
    Value: !Ref DBSecret
    Export:
      Name: !Sub ${EnvironmentName}-DBSecretArn

  DBSecurityGroup:
    Description: Security group for RDS database
    Value: !Ref DBSecurityGroup
    Export:
      Name: !Sub ${EnvironmentName}-DBSecurityGroup
