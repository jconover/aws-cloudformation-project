apiVersion: apps/v1
kind: Deployment
metadata:
  name: devops-portfolio-app
  namespace: default
  labels:
    app: devops-portfolio
    tier: backend
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: devops-portfolio
      tier: backend
  template:
    metadata:
      labels:
        app: devops-portfolio
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: devops-portfolio-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: app
        image: ${ECR_REPOSITORY_URI}:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: environment
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: aws_region
        - name: DB_SECRET_ARN
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: db_secret_arn
        - name: SQS_QUEUE_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: sqs_queue_url
        - name: S3_BUCKET_NAME
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: s3_bucket_name
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: devops-portfolio-sa
  namespace: default
  annotations:
    eks.amazonaws.com/role-arn: ${IAM_ROLE_ARN}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: default
data:
  environment: "production"
  aws_region: "us-east-1"
  db_secret_arn: "${DB_SECRET_ARN}"
  sqs_queue_url: "${SQS_QUEUE_URL}"
  s3_bucket_name: "${S3_BUCKET_NAME}"
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: devops-portfolio-pdb
  namespace: default
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: devops-portfolio
      tier: backend
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: devops-portfolio-hpa
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: devops-portfolio-app
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 15
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 2
        periodSeconds: 15
      selectPolicy: Max
